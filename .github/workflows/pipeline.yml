name: CI/CD_GCP_Actions

on:
  workflow_dispatch:
  push:
    paths:
      - 'terraform/**'
      - './github/workflows/pipeline.yml'
    branches:
    - main

env:
  BUCKET_NAME: gcp-team-tf-state-staging
  SERVICE_ACCOUNT: gcp-team@my-first-project-327511.iam.gserviceaccount.com
  GCP_ID_PROJECT: ${{ secrets.GCP_ID_PROJECT }}
  CLUSTER_NAME: itsprout-k8s-cluster
  REGION: us-central1

jobs: 
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode credentials
        run: echo "${{ secrets.GCP_CREDENTIALS }}" | base64 -d > credentials_file.json

      - name: Authentication with Google Cloud
        run: |
          gcloud config set account ${SERVICE_ACCOUNT}
          gcloud auth activate-service-account --key-file=credentials_file.json
          gcloud config set project ${{ secrets.GCP_ID_PROJECT }}
            
      - name: Create bucket if dosn't exists
        env:
          SCRIPT_DIR: ${{ github.workspace }}/terraform/scripts
        run: bash  $SCRIPT_DIR/create-bucket.sh

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan

      - name: Terraform apply
        if: "!contains(github.event.head_commit.message, 'destroy')"
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: contains(github.event.head_commit.message, 'destroy')
        run: terraform destroy -auto-approve

  # terraform-CD:
  #   needs: terraform
  #   if: "!contains(github.event.head_commit.message, 'destroy') "
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: terraform

    # steps:
    # - name: Clon Rep
    #   uses: actions/checkout@v3

    # - name: Decode credentials
    #   run: echo "${{ secrets.GCP_CREDENTIALS }}" | base64 -d > credentials_file.json

    # - name: Authentication with Google Cloud
    #   run: |
    #     gcloud config set account ${SERVICE_ACCOUNT}
    #     gcloud auth activate-service-account --key-file=credentials_file.json
    #     gcloud config set project ${{ secrets.GCP_ID_PROJECT }}

    # - name: Install auth plugins for the cluster
    #   env:
    #     SCRIPT_DIR: ${{ github.workspace }}/terraform/scripts
    #   run: bash  $SCRIPT_DIR/install.sh

    # - name: Get kubeconfig 
    #   run: gcloud container clusters get-credentials $CLUSTER_NAME --region=$REGION --project=${{ secrets.GCP_ID_PROJECT }}

    # - name: Check Services/Pods/Deployment Before Deploy
    #   run: echo "This is Services" && kubectl get service && echo "This is pods" && kubectl get pods  && echo "This is Deployments" && kubectl get  deployment
